version: "3.3"
services:

  nginx:
    image: bunkerity/bunkerized-nginx:latest
    networks:
      - ${NGINX_PUBLIC_NETWORK?Variable not set}
      - default
    ports:
      - 8080:8080
      - 8443:8443
    environment:
      - USE_REVERSE_PROXY=yes
      - REVERSE_PROXY_URL_1=/
      - REVERSE_PROXY_HOST_1=http://frontend
      - REVERSE_PROXY_URL_2=/api
      - REVERSE_PROXY_HOST_2=http://backend
      - REVERSE_PROXY_URL_3=/docs
      - REVERSE_PROXY_HOST_3=http://backend
      - USE_FAIL2BAN
      - USE_ANTIBOT
      - AUTO_LETS_ENCRYPT
      - SERVER_NAME
      - REDIRECT_HTTP_TO_HTTPS
      - GENERATE_SELF_SIGNED_SSL

  db:
    image: postgres:12
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    deploy:
      placement:
        constraints:
          - node.labels.${STACK_NAME?Variable not set}.app-db-data == true

  pgadmin:
    image: dpage/pgadmin4
    networks:
      - ${NGINX_PUBLIC_NETWORK?Variable not set}
      - default
    depends_on:
      - db
    env_file:
      - .env

  queue:
    image: rabbitmq:3
  
  flower:
    image: mher/flower
    networks:
      - ${NGINX_PUBLIC_NETWORK?Variable not set}
      - default
    env_file:
      - .env
    command:
      - "--broker=amqp://guest@queue:5672//"
      # For the "Broker" tab to work in the flower UI, uncomment the following command argument,
      # and change the queue service's image as well
      # - "--broker_api=http://guest:guest@queue:15672/api//"
  
  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      # Allow explicit env var override for tests
      - SMTP_HOST=${SMTP_HOST}
    build:
      context: ./backend
      dockerfile: backend.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
  
  celeryworker:
    image: '${DOCKER_IMAGE_CELERYWORKER?Variable not set}:${TAG-latest}'
    depends_on:
      - db
      - queue
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      # Allow explicit env var override for tests
      - SMTP_HOST=${SMTP_HOST?Variable not set}
    build:
      context: ./backend
      dockerfile: celeryworker.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
  
  frontend:
    image: '${DOCKER_IMAGE_FRONTEND?Variable not set}:${TAG-latest}'
    build:
      context: ./frontend
      args:
        FRONTEND_ENV: ${FRONTEND_ENV-production}

volumes:
  app-db-data:

networks:
  nginx-public:
    # Allow setting it to false for testing
    external: ${NGINX_PUBLIC_NETWORK_IS_EXTERNAL-true}
